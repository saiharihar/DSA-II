class Solution {
public:
    string longestPalindrome(string s) {
        int n = s.length();
        if(n==0) return "";
        int start = 0;
        int maxlength;
        vector<vector<bool>> ispalindrome(n, vector<bool>(n, false));
        for (int i = 0; i < n; ++i) {
            ispalindrome[i][i] = true;
        }
        maxlength = 1;
        for (int len = 2; len <= n; ++len) {
            for (int i = 0; i <n-len+1; ++i) {
                int j = i+len-1;
                if (s[i] == s[j] && (len ==2 || ispalindrome[i + 1][j - 1])) {
                    ispalindrome[i][j] = true
                    if (len > maxlength) {
                        maxlength = len;
                        start = i;
                    }
                }
            }
        }
        return s.substr(start, maxlength);
    }
};